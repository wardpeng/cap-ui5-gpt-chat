{"version":3,"file":"Chats.controller.js","names":["BaseController","NewEntityDialog","Chats","onInit","getRouter","getRoute","attachPatternMatched","onRouteMatched","event","getView","byId","getBinding","refresh","onChatPress","item","getParameter","navTo","chat","getBindingContext","getProperty","onAddChat","binding","context","create","model","dialog","open","catch","delete","getObject","ID"],"sources":["Chats.controller.ts"],"sourcesContent":["import BaseController from \"./BaseController\";\nimport ODataListBinding from \"sap/ui/model/odata/v4/ODataListBinding\";\nimport NewEntityDialog from \"../service/NewEntityDialog\";\nimport UI5Event from \"sap/ui/base/Event\";\nimport { IChats } from \"../types/ChatService\";\n\n/**\n * @namespace com.p36.capui5gptchat.controller\n */\nexport default class Chats extends BaseController {\n  /**\n   * Called when the controller is instantiated.\n   */\n  public onInit(): void {\n    this.getRouter().getRoute(\"home\").attachPatternMatched(this.onRouteMatched, this);\n  }\n\n  /**\n   * Event handler for the route matched event.\n   * Refreshes the chat list.\n   *\n   * @param event {sap.ui.base.Event}\n   **/\n  public onRouteMatched(event: UI5Event): void {\n    this.getView().byId(\"chatList\").getBinding(\"items\").refresh();\n  }\n\n  /**\n   * Event handler when the user presses a chat.\n   *\n   * @param event {sap.ui.base.Event}\n   */\n  public onChatPress(event: UI5Event): void {\n    const item = event.getParameter(\"listItem\");\n    this.getRouter().navTo(\"chat\", {\n      chat: item.getBindingContext().getProperty(\"ID\"),\n    });\n  }\n\n  /**\n   * Event handler for the add chat button.\n   *\n   * @param event {sap.ui.base.Event}\n   */\n  public async onAddChat(event: UI5Event): Promise<void> {\n    const binding = <ODataListBinding>this.getView().byId(\"chatList\").getBinding(\"items\");\n    let context = binding.create(<IChats>{\n      model: \"text-davinci-003\",\n    });\n\n    const dialog = new NewEntityDialog(context, \"NewChatDialog\", this.getView());\n    await dialog.open().catch(() => {\n      context.delete(\"$auto\");\n    });\n    this.getRouter().navTo(\"chat\", {\n      chat: <IChats>context.getObject().ID,\n    });\n  }\n}\n"],"mappings":";;;;QAAOA,cAAc;EAAA,MAEdC,eAAe;EAItB;AACA;AACA;EAFA,MAGqBC,KAAK,GAASF,cAAc;IAIxCG,MAAM,qBAAS;MACpB,IAAI,CAACC,SAAS,EAAE,CAACC,QAAQ,CAAC,MAAM,CAAC,CAACC,oBAAoB,CAAC,IAAI,CAACC,cAAc,EAAE,IAAI,CAAC;IACnF,CAAC;IAQMA,cAAc,2BAACC,KAAe,EAAQ;MAC3C,IAAI,CAACC,OAAO,EAAE,CAACC,IAAI,CAAC,UAAU,CAAC,CAACC,UAAU,CAAC,OAAO,CAAC,CAACC,OAAO,EAAE;IAC/D,CAAC;IAOMC,WAAW,wBAACL,KAAe,EAAQ;MACxC,MAAMM,IAAI,GAAGN,KAAK,CAACO,YAAY,CAAC,UAAU,CAAC;MAC3C,IAAI,CAACX,SAAS,EAAE,CAACY,KAAK,CAAC,MAAM,EAAE;QAC7BC,IAAI,EAAEH,IAAI,CAACI,iBAAiB,EAAE,CAACC,WAAW,CAAC,IAAI;MACjD,CAAC,CAAC;IACJ,CAAC;IAOYC,SAAS,4BAACZ,KAAe,EAAiB;MACrD,MAAMa,OAAO,GAAqB,IAAI,CAACZ,OAAO,EAAE,CAACC,IAAI,CAAC,UAAU,CAAC,CAACC,UAAU,CAAC,OAAO,CAAC;MACrF,IAAIW,OAAO,GAAGD,OAAO,CAACE,MAAM,CAAS;QACnCC,KAAK,EAAE;MACT,CAAC,CAAC;MAEF,MAAMC,MAAM,GAAG,IAAIxB,eAAe,CAACqB,OAAO,EAAE,eAAe,EAAE,IAAI,CAACb,OAAO,EAAE,CAAC;MAC5E,MAAMgB,MAAM,CAACC,IAAI,EAAE,CAACC,KAAK,CAAC,MAAM;QAC9BL,OAAO,CAACM,MAAM,CAAC,OAAO,CAAC;MACzB,CAAC,CAAC;MACF,IAAI,CAACxB,SAAS,EAAE,CAACY,KAAK,CAAC,MAAM,EAAE;QAC7BC,IAAI,EAAUK,OAAO,CAACO,SAAS,EAAE,CAACC;MACpC,CAAC,CAAC;IACJ;EAAC;EAAA,OAhDkB5B,KAAK;AAAA"}